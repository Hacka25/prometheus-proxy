# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/proxy_service.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
    name='proto/proxy_service.proto',
    package='proxy_service',
    syntax='proto3',
    serialized_pb=_b(
        '\n\x19proto/proxy_service.proto\x12\rproxy_service\"8\n\x0fRegisterRequest\x12\x10\n\x08hostname\x18\x01 \x01(\t\x12\x13\n\x0btarget_path\x18\x02 \x01(\t\"7\n\x10RegisterResponse\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\x05\x12\x11\n\tproxy_url\x18\x02 \x01(\t\"\x07\n\x05\x45mpty\"\x1d\n\tAgentInfo\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\x05\"0\n\rScrapeRequest\x12\x11\n\tscrape_id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\"f\n\x0cScrapeResult\x12\x10\n\x08\x61gent_id\x18\x01 \x01(\x05\x12\x11\n\tscrape_id\x18\x02 \x01(\x05\x12\x13\n\x0bstatus_code\x18\x03 \x01(\x05\x12\x0e\n\x06reason\x18\x04 \x01(\t\x12\x0c\n\x04text\x18\x05 \x01(\t2\x87\x02\n\x0cProxyService\x12R\n\rregisterAgent\x12\x1e.proxy_service.RegisterRequest\x1a\x1f.proxy_service.RegisterResponse\"\x00\x12S\n\x15readRequestsFromProxy\x12\x18.proxy_service.AgentInfo\x1a\x1c.proxy_service.ScrapeRequest\"\x00\x30\x01\x12N\n\x15writeResponsesToProxy\x12\x1b.proxy_service.ScrapeResult\x1a\x14.proxy_service.Empty\"\x00(\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_REGISTERREQUEST = _descriptor.Descriptor(
    name='RegisterRequest',
    full_name='proxy_service.RegisterRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='hostname', full_name='proxy_service.RegisterRequest.hostname', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='target_path', full_name='proxy_service.RegisterRequest.target_path', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=44,
    serialized_end=100,
)


_REGISTERRESPONSE = _descriptor.Descriptor(
    name='RegisterResponse',
    full_name='proxy_service.RegisterResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='agent_id', full_name='proxy_service.RegisterResponse.agent_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='proxy_url', full_name='proxy_service.RegisterResponse.proxy_url', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=102,
    serialized_end=157,
)


_EMPTY = _descriptor.Descriptor(
    name='Empty',
    full_name='proxy_service.Empty',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=159,
    serialized_end=166,
)


_AGENTINFO = _descriptor.Descriptor(
    name='AgentInfo',
    full_name='proxy_service.AgentInfo',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='agent_id', full_name='proxy_service.AgentInfo.agent_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=168,
    serialized_end=197,
)


_SCRAPEREQUEST = _descriptor.Descriptor(
    name='ScrapeRequest',
    full_name='proxy_service.ScrapeRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='scrape_id', full_name='proxy_service.ScrapeRequest.scrape_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='name', full_name='proxy_service.ScrapeRequest.name', index=1,
            number=2, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=199,
    serialized_end=247,
)


_SCRAPERESULT = _descriptor.Descriptor(
    name='ScrapeResult',
    full_name='proxy_service.ScrapeResult',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='agent_id', full_name='proxy_service.ScrapeResult.agent_id', index=0,
            number=1, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='scrape_id', full_name='proxy_service.ScrapeResult.scrape_id', index=1,
            number=2, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='status_code', full_name='proxy_service.ScrapeResult.status_code', index=2,
            number=3, type=5, cpp_type=1, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='reason', full_name='proxy_service.ScrapeResult.reason', index=3,
            number=4, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
        _descriptor.FieldDescriptor(
            name='text', full_name='proxy_service.ScrapeResult.text', index=4,
            number=5, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            options=None),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=249,
    serialized_end=351,
)

DESCRIPTOR.message_types_by_name['RegisterRequest'] = _REGISTERREQUEST
DESCRIPTOR.message_types_by_name['RegisterResponse'] = _REGISTERRESPONSE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['AgentInfo'] = _AGENTINFO
DESCRIPTOR.message_types_by_name['ScrapeRequest'] = _SCRAPEREQUEST
DESCRIPTOR.message_types_by_name['ScrapeResult'] = _SCRAPERESULT

RegisterRequest = _reflection.GeneratedProtocolMessageType('RegisterRequest', (_message.Message,), dict(
    DESCRIPTOR=_REGISTERREQUEST,
    __module__='proto.proxy_service_pb2'
    # @@protoc_insertion_point(class_scope:proxy_service.RegisterRequest)
))
_sym_db.RegisterMessage(RegisterRequest)

RegisterResponse = _reflection.GeneratedProtocolMessageType('RegisterResponse', (_message.Message,), dict(
    DESCRIPTOR=_REGISTERRESPONSE,
    __module__='proto.proxy_service_pb2'
    # @@protoc_insertion_point(class_scope:proxy_service.RegisterResponse)
))
_sym_db.RegisterMessage(RegisterResponse)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
    DESCRIPTOR=_EMPTY,
    __module__='proto.proxy_service_pb2'
    # @@protoc_insertion_point(class_scope:proxy_service.Empty)
))
_sym_db.RegisterMessage(Empty)

AgentInfo = _reflection.GeneratedProtocolMessageType('AgentInfo', (_message.Message,), dict(
    DESCRIPTOR=_AGENTINFO,
    __module__='proto.proxy_service_pb2'
    # @@protoc_insertion_point(class_scope:proxy_service.AgentInfo)
))
_sym_db.RegisterMessage(AgentInfo)

ScrapeRequest = _reflection.GeneratedProtocolMessageType('ScrapeRequest', (_message.Message,), dict(
    DESCRIPTOR=_SCRAPEREQUEST,
    __module__='proto.proxy_service_pb2'
    # @@protoc_insertion_point(class_scope:proxy_service.ScrapeRequest)
))
_sym_db.RegisterMessage(ScrapeRequest)

ScrapeResult = _reflection.GeneratedProtocolMessageType('ScrapeResult', (_message.Message,), dict(
    DESCRIPTOR=_SCRAPERESULT,
    __module__='proto.proxy_service_pb2'
    # @@protoc_insertion_point(class_scope:proxy_service.ScrapeResult)
))
_sym_db.RegisterMessage(ScrapeResult)


try:
    # THESE ELEMENTS WILL BE DEPRECATED.
    # Please use the generated *_pb2_grpc.py files instead.
    import grpc
    from grpc.framework.common import cardinality
    from grpc.framework.interfaces.face import utilities as face_utilities
    from grpc.beta import implementations as beta_implementations
    from grpc.beta import interfaces as beta_interfaces


    class ProxyServiceStub(object):

        def __init__(self, channel):
            """Constructor.
      
            Args:
              channel: A grpc.Channel.
            """
            self.registerAgent = channel.unary_unary(
                '/proxy_service.ProxyService/registerAgent',
                request_serializer=RegisterRequest.SerializeToString,
                response_deserializer=RegisterResponse.FromString,
            )
            self.readRequestsFromProxy = channel.unary_stream(
                '/proxy_service.ProxyService/readRequestsFromProxy',
                request_serializer=AgentInfo.SerializeToString,
                response_deserializer=ScrapeRequest.FromString,
            )
            self.writeResponsesToProxy = channel.stream_unary(
                '/proxy_service.ProxyService/writeResponsesToProxy',
                request_serializer=ScrapeResult.SerializeToString,
                response_deserializer=Empty.FromString,
            )


    class ProxyServiceServicer(object):

        def registerAgent(self, request, context):
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def readRequestsFromProxy(self, request, context):
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')

        def writeResponsesToProxy(self, request_iterator, context):
            context.set_code(grpc.StatusCode.UNIMPLEMENTED)
            context.set_details('Method not implemented!')
            raise NotImplementedError('Method not implemented!')


    def add_ProxyServiceServicer_to_server(servicer, server):
        rpc_method_handlers = {
            'registerAgent': grpc.unary_unary_rpc_method_handler(
                servicer.registerAgent,
                request_deserializer=RegisterRequest.FromString,
                response_serializer=RegisterResponse.SerializeToString,
            ),
            'readRequestsFromProxy': grpc.unary_stream_rpc_method_handler(
                servicer.readRequestsFromProxy,
                request_deserializer=AgentInfo.FromString,
                response_serializer=ScrapeRequest.SerializeToString,
            ),
            'writeResponsesToProxy': grpc.stream_unary_rpc_method_handler(
                servicer.writeResponsesToProxy,
                request_deserializer=ScrapeResult.FromString,
                response_serializer=Empty.SerializeToString,
            ),
        }
        generic_handler = grpc.method_handlers_generic_handler(
            'proxy_service.ProxyService', rpc_method_handlers)
        server.add_generic_rpc_handlers((generic_handler,))


    class BetaProxyServiceServicer(object):
        """The Beta API is deprecated for 0.15.0 and later.
    
        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""

        def registerAgent(self, request, context):
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def readRequestsFromProxy(self, request, context):
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)

        def writeResponsesToProxy(self, request_iterator, context):
            context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


    class BetaProxyServiceStub(object):
        """The Beta API is deprecated for 0.15.0 and later.
    
        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This class was generated
        only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""

        def registerAgent(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            raise NotImplementedError()

        registerAgent.future = None

        def readRequestsFromProxy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
            raise NotImplementedError()

        def writeResponsesToProxy(self, request_iterator, timeout, metadata=None, with_call=False,
                                  protocol_options=None):
            raise NotImplementedError()

        writeResponsesToProxy.future = None


    def beta_create_ProxyService_server(servicer, pool=None, pool_size=None, default_timeout=None,
                                        maximum_timeout=None):
        """The Beta API is deprecated for 0.15.0 and later.
    
        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_deserializers = {
            ('proxy_service.ProxyService', 'readRequestsFromProxy'): AgentInfo.FromString,
            ('proxy_service.ProxyService', 'registerAgent'): RegisterRequest.FromString,
            ('proxy_service.ProxyService', 'writeResponsesToProxy'): ScrapeResult.FromString,
        }
        response_serializers = {
            ('proxy_service.ProxyService', 'readRequestsFromProxy'): ScrapeRequest.SerializeToString,
            ('proxy_service.ProxyService', 'registerAgent'): RegisterResponse.SerializeToString,
            ('proxy_service.ProxyService', 'writeResponsesToProxy'): Empty.SerializeToString,
        }
        method_implementations = {
            ('proxy_service.ProxyService', 'readRequestsFromProxy'): face_utilities.unary_stream_inline(
                servicer.readRequestsFromProxy),
            ('proxy_service.ProxyService', 'registerAgent'): face_utilities.unary_unary_inline(servicer.registerAgent),
            ('proxy_service.ProxyService', 'writeResponsesToProxy'): face_utilities.stream_unary_inline(
                servicer.writeResponsesToProxy),
        }
        server_options = beta_implementations.server_options(request_deserializers=request_deserializers,
                                                             response_serializers=response_serializers,
                                                             thread_pool=pool, thread_pool_size=pool_size,
                                                             default_timeout=default_timeout,
                                                             maximum_timeout=maximum_timeout)
        return beta_implementations.server(method_implementations, options=server_options)


    def beta_create_ProxyService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
        """The Beta API is deprecated for 0.15.0 and later.
    
        It is recommended to use the GA API (classes and functions in this
        file not marked beta) for all further purposes. This function was
        generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
        request_serializers = {
            ('proxy_service.ProxyService', 'readRequestsFromProxy'): AgentInfo.SerializeToString,
            ('proxy_service.ProxyService', 'registerAgent'): RegisterRequest.SerializeToString,
            ('proxy_service.ProxyService', 'writeResponsesToProxy'): ScrapeResult.SerializeToString,
        }
        response_deserializers = {
            ('proxy_service.ProxyService', 'readRequestsFromProxy'): ScrapeRequest.FromString,
            ('proxy_service.ProxyService', 'registerAgent'): RegisterResponse.FromString,
            ('proxy_service.ProxyService', 'writeResponsesToProxy'): Empty.FromString,
        }
        cardinalities = {
            'readRequestsFromProxy': cardinality.Cardinality.UNARY_STREAM,
            'registerAgent': cardinality.Cardinality.UNARY_UNARY,
            'writeResponsesToProxy': cardinality.Cardinality.STREAM_UNARY,
        }
        stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer,
                                                         request_serializers=request_serializers,
                                                         response_deserializers=response_deserializers,
                                                         thread_pool=pool, thread_pool_size=pool_size)
        return beta_implementations.dynamic_stub(channel, 'proxy_service.ProxyService', cardinalities,
                                                 options=stub_options)
except ImportError:
    pass
# @@protoc_insertion_point(module_scope)
