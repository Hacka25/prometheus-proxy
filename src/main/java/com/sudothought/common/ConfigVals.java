// generated by tscfg 0.8.0 on Wed Apr 19 11:09:28 PDT 2017
// source: etc/config/config.conf

package com.sudothought.common;

public class ConfigVals {
  public final ConfigVals.Agent agent;
  public final ConfigVals.Proxy proxy;
  public ConfigVals(com.typesafe.config.Config c) {
    this.agent = new ConfigVals.Agent(c.getConfig("agent"));
    this.proxy = new ConfigVals.Proxy(c.getConfig("proxy"));
  }

  public static class Agent {
    public final Agent.Grpc                            grpc;
    public final Agent.Internal                        internal;
    public final Agent.Metrics                         metrics;
    public final java.lang.String                      name;
    public final java.util.List<Agent.PathConfigs$Elm> pathConfigs;
    public final Agent.Zipkin                          zipkin;
    public Agent(com.typesafe.config.Config c) {
      this.grpc = new Agent.Grpc(c.getConfig("grpc"));
      this.internal = new Agent.Internal(c.getConfig("internal"));
      this.metrics = new Agent.Metrics(c.getConfig("metrics"));
      this.name = c.hasPathOrNull("name") ? c.getString("name") : "";
      this.pathConfigs = $_LAgent_PathConfigs$Elm(c.getList("pathConfigs"));
      this.zipkin = new Agent.Zipkin(c.getConfig("zipkin"));
    }

    private static java.util.List<Agent.PathConfigs$Elm> $_LAgent_PathConfigs$Elm(com.typesafe.config.ConfigList cl) {
      java.util.ArrayList<Agent.PathConfigs$Elm> al = new java.util.ArrayList<>();
      for (com.typesafe.config.ConfigValue cv : cl) {
        al.add(new Agent.PathConfigs$Elm(((com.typesafe.config.ConfigObject) cv).toConfig()));
      }
      return java.util.Collections.unmodifiableList(al);
    }

    public static class Grpc {
      public final boolean          allPrometheusMetrics;
      public final java.lang.String hostname;
      public final int              port;
      public final boolean          prometheusMetricsEnabled;
      public final int              reconectPauseSecs;
      public final boolean          zipkinReportingEnabled;

      public Grpc(com.typesafe.config.Config c) {
        this.allPrometheusMetrics = !c.hasPathOrNull("allPrometheusMetrics") || c.getBoolean("allPrometheusMetrics");
        this.hostname = c.hasPathOrNull("hostname") ? c.getString("hostname") : "localhost";
        this.port = c.hasPathOrNull("port") ? c.getInt("port") : 50051;
        this.prometheusMetricsEnabled = !c.hasPathOrNull("prometheusMetricsEnabled") || c.getBoolean("prometheusMetricsEnabled");
        this.reconectPauseSecs = c.hasPathOrNull("reconectPauseSecs") ? c.getInt("reconectPauseSecs") : 3;
        this.zipkinReportingEnabled = !c.hasPathOrNull("zipkinReportingEnabled") || c.getBoolean("zipkinReportingEnabled");
      }
    }

    public static class Internal {
      public final boolean prometheusMetricsEnabled;
      public final int     scrapeQueueSize;

      public Internal(com.typesafe.config.Config c) {
        this.prometheusMetricsEnabled = !c.hasPathOrNull("prometheusMetricsEnabled") || c.getBoolean("prometheusMetricsEnabled");
        this.scrapeQueueSize = c.hasPathOrNull("scrapeQueueSize") ? c.getInt("scrapeQueueSize") : 128;
      }
    }

    public static class Metrics {
      public final boolean          enabled;
      public final java.lang.String path;
      public final int              port;

      public Metrics(com.typesafe.config.Config c) {
        this.enabled = !c.hasPathOrNull("enabled") || c.getBoolean("enabled");
        this.path = c.hasPathOrNull("path") ? c.getString("path") : "metrics";
        this.port = c.hasPathOrNull("port") ? c.getInt("port") : 8083;
      }
    }

    public static class PathConfigs$Elm {
      public final java.lang.String name;
      public final java.lang.String path;
      public final java.lang.String url;

      public PathConfigs$Elm(com.typesafe.config.Config c) {
        this.name = c.getString("name");
        this.path = c.getString("path");
        this.url = c.getString("url");
      }
    }

    public static class Zipkin {
      public final boolean          enabled;
      public final java.lang.String hostname;
      public final java.lang.String path;
      public final int              port;
      public final java.lang.String serviceName;

      public Zipkin(com.typesafe.config.Config c) {
        this.enabled = c.hasPathOrNull("enabled") && c.getBoolean("enabled");
        this.hostname = c.hasPathOrNull("hostname") ? c.getString("hostname") : "localhost";
        this.path = c.hasPathOrNull("path") ? c.getString("path") : "api/v1/spans";
        this.port = c.hasPathOrNull("port") ? c.getInt("port") : 9411;
        this.serviceName = c.hasPathOrNull("serviceName") ? c.getString("serviceName") : "prometheus-agent";
      }
    }
  }

  public static class Proxy {
    public final Proxy.Grpc2     grpc;
    public final Proxy.Http      http;
    public final Proxy.Internal2 internal;
    public final Proxy.Metrics2  metrics;
    public final Proxy.Zipkin2   zipkin;
    public Proxy(com.typesafe.config.Config c) {
      this.grpc = new Proxy.Grpc2(c.getConfig("grpc"));
      this.http = new Proxy.Http(c.getConfig("http"));
      this.internal = new Proxy.Internal2(c.getConfig("internal"));
      this.metrics = new Proxy.Metrics2(c.getConfig("metrics"));
      this.zipkin = new Proxy.Zipkin2(c.getConfig("zipkin"));
    }

    public static class Grpc2 {
      public final boolean allPrometheusMetrics;
      public final int     port;
      public final boolean prometheusMetricsEnabled;
      public final boolean zipkinReportingEnabled;

      public Grpc2(com.typesafe.config.Config c) {
        this.allPrometheusMetrics = !c.hasPathOrNull("allPrometheusMetrics") || c.getBoolean("allPrometheusMetrics");
        this.port = c.hasPathOrNull("port") ? c.getInt("port") : 50051;
        this.prometheusMetricsEnabled = !c.hasPathOrNull("prometheusMetricsEnabled") || c.getBoolean("prometheusMetricsEnabled");
        this.zipkinReportingEnabled = !c.hasPathOrNull("zipkinReportingEnabled") || c.getBoolean("zipkinReportingEnabled");
      }
    }

    public static class Http {
      public final int port;

      public Http(com.typesafe.config.Config c) {
        this.port = c.hasPathOrNull("port") ? c.getInt("port") : 8080;
      }
    }

    public static class Internal2 {
      public final boolean agentQueueSizeMetricsEnabled;
      public final int     agentQueueSizePauseSecs;
      public final int     requestTimeoutSecs;
      public final int     scrapeQueueSize;

      public Internal2(com.typesafe.config.Config c) {
        this.agentQueueSizeMetricsEnabled = !c.hasPathOrNull("agentQueueSizeMetricsEnabled") || c.getBoolean("agentQueueSizeMetricsEnabled");
        this.agentQueueSizePauseSecs = c.hasPathOrNull("agentQueueSizePauseSecs") ? c.getInt("agentQueueSizePauseSecs") : 1;
        this.requestTimeoutSecs = c.hasPathOrNull("requestTimeoutSecs") ? c.getInt("requestTimeoutSecs") : 5;
        this.scrapeQueueSize = c.hasPathOrNull("scrapeQueueSize") ? c.getInt("scrapeQueueSize") : 128;
      }
    }

    public static class Metrics2 {
      public final boolean          enabled;
      public final java.lang.String path;
      public final int              port;

      public Metrics2(com.typesafe.config.Config c) {
        this.enabled = !c.hasPathOrNull("enabled") || c.getBoolean("enabled");
        this.path = c.hasPathOrNull("path") ? c.getString("path") : "metrics";
        this.port = c.hasPathOrNull("port") ? c.getInt("port") : 8082;
      }
    }

    public static class Zipkin2 {
      public final boolean          enabled;
      public final java.lang.String hostname;
      public final java.lang.String path;
      public final int              port;
      public final java.lang.String serviceName;

      public Zipkin2(com.typesafe.config.Config c) {
        this.enabled = c.hasPathOrNull("enabled") && c.getBoolean("enabled");
        this.hostname = c.hasPathOrNull("hostname") ? c.getString("hostname") : "localhost";
        this.path = c.hasPathOrNull("path") ? c.getString("path") : "api/v1/spans";
        this.port = c.hasPathOrNull("port") ? c.getInt("port") : 9411;
        this.serviceName = c.hasPathOrNull("serviceName") ? c.getString("serviceName") : "prometheus-proxy";
      }
    }
  }
}
      
