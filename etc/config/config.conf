
proxy {
  http.port = 8080

  grpc {
    port = 50051
    prometheusMetricsEnabled = true
    allPrometheusMetrics = true
    zipkinReportingEnabled = true
  }

  metrics {
    enabled = true
    port = 8082
    path = "metrics"
  }

  zipkin {
    enabled = false
    hostname = "localhost"
    port = 9411
    path = "api/v1/spans"
    serviceName = "prometheus-proxy"
  }

  internal {
    scrapeQueueSize = 128
    requestTimeoutSecs = 5
    agentQueueSizeMetricsEnabled = true
    agentQueueSizePauseSecs = 1
  }
}

agent {

  name = ""

  grpc {
    hostname = "localhost"
    port = 50051
    reconectPauseSecs = 3
    prometheusMetricsEnabled = true
    allPrometheusMetrics = true
    zipkinReportingEnabled = true
  }

  metrics {
    enabled = true
    port = 8083
    path = "metrics"
  }

  zipkin {
    enabled = false
    hostname = "localhost"
    port = 9411
    path = "api/v1/spans"
    serviceName = "prometheus-agent"
  }

  pathConfigs: [
    {
      name: String
      path: String
      url: String
    }
  ]

  internal {
    scrapeQueueSize = 128
    prometheusMetricsEnabled = true
  }
}